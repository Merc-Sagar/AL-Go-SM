name: Run PSScriptAnalyzer
author: Microsoft Corporation
branding:
  icon: "check"
  color: "gray-dark"
inputs:
  path:
    description: 'Specifies the path to the scripts or module to be analyzed. Wildcard characters are supported.'
    required: true
    default: '.\'
  excludeRule:
    description: 'Comma separated list of PSScriptAnalyzer rules to exclude. Wildcard characters are supported.'
    required: false
  recurse:
    description: 'Runs Script Analyzer on the files in the Path directory and all subdirectories recursively.'
    required: false
  output:
    description: 'Specifies where the path for the sarif file'
    required: true
    default: 'results.sarif'
runs:
  using: "composite"
  steps:
    - name: Run PSScriptAnalyzer and ConvertToSARIF
      shell: pwsh
      run: |
        $analyzerModule = Get-Module -ListAvailable -Name PSScriptAnalyzer
        if ($null -eq $analyzerModule) {
          Install-Module -Name PSScriptAnalyzer -Force
        }

        $sarifModule = Get-Module -ListAvailable -Name ConvertToSARIF
        if ($null -eq $sarifModule) {
          Install-Module -Name ConvertToSARIF -Force
        }
        Import-Module -Name ConvertToSARIF -Force

        $htPSA = [ordered]@{ Path = '${{ inputs.path }}'; }
        Write-Output "Modules installed, now running tests."
        if(![string]::IsNullOrEmpty('${{ inputs.excludeRule }}')) { $htPSA.add('ExcludeRule', @(${{ inputs.excludeRule }})) }
        if(![string]::IsNullOrEmpty('${{ inputs.recurse }}')) { $htPSA.add('Recurse', $true) }
        $htCTS = [ordered]@{ FilePath = '${{ inputs.output }}'; }

        $maxRetries = 3
        $retryCount = 0
        $success = $false

        while (-not $success -and $retryCount -lt $maxRetries) {
          Try {
            Invoke-ScriptAnalyzer @htPSA -Verbose | ConvertTo-SARIF @htCTS
            $success = $true
          } Catch {
            Write-Host "::Error:: $_"
            $retryCount++
            Write-Output "Retrying... ($retryCount/$maxRetries)"
          }
        }

        if (-not $success) {
          Write-Host "::Error:: Failed after $maxRetries attempts."
          exit 1
        }
